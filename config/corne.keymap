/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <10000>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q        &kp W       &kp E      &kp R           &kp T        &kp Y    &kp U            &kp I      &kp O            &kp P                           &none
&none  &mt LCTRL A  &mt LALT S  &kp D      &mt LEFT_GUI F  &kp G        &kp H    &mt RIGHT_GUI J  &kp K      &mt RIGHT_ALT L  &mt RIGHT_CONTROL SINGLE_QUOTE  &none
&none  &mt LSHFT Z  &kp X       &kp C      &kp V           &kp B        &kp N    &kp M            &kp COMMA  &kp DOT          &mt RSHFT FSLH                  &none
                                &lt 1 ESC  &kt SPACE       &lt 3 TAB    &kp RET  &kp BACKSPACE    &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5     &kp N6   &kp N7    &kp UP_ARROW  &kp N9     &kp N0      &none
&none  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5     &kp F6   &kp LEFT  &kp DOWN      &kp RIGHT  &kt DELETE  &none
&none  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11    &kp F12  &tog 3    &trans        &trans     &none       &none
                       &trans  &trans   &trans     &trans   &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp NUMBER_6  &kp N7     &kp N8            &kp N9             &kp N0         &none
&none  &trans        &trans        &trans        &trans        &trans       &kp MINUS     &kp EQUAL  &kp LBKT          &kp GRAVE          &kt SEMICOLON  &none
&none  &trans        &trans        &trans        &trans        &trans       &trans        &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &none
                                   &kp LGUI      &trans        &kp SPACE    &kp RET       &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp N0        &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &trans
&trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &caps_word    &trans  &trans        &trans        &trans        &trans             &trans
&trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans  &trans        &trans        &trans        &ext_power EP_TOG  &trans
                              &trans        &trans        &trans        &trans  &trans        &trans
            >;
        };
    };
};
